// Generated by CoffeeScript 1.9.3
(function() {
  describe("AuthService", function() {
    var $cookies, $httpBackend, $resource, AuthService, loginArg, loginPayload, response;
    AuthService = $resource = $cookies = $httpBackend = null;
    loginArg = {
      email: "johndoe@john",
      password: "12345678"
    };
    loginPayload = {
      session: loginArg
    };
    response = {
      user: {
        id: 1,
        email: "johndoe@john",
        auth_token: "sP3hoKN5-y-tRtagTf2B",
        created_at: "2015-08-09T06:00:37.484Z",
        updated_at: "2015-08-09T06:00:37.484Z",
        category_ids: []
      }
    };
    beforeEach(module("app"));
    beforeEach(module(function($provide) {}));
    beforeEach(inject(function(_AuthService_, _$resource_, _$cookies_, _$httpBackend_) {
      var ref;
      return ref = [_AuthService_, _$resource_, _$cookies_, _$httpBackend_], AuthService = ref[0], $resource = ref[1], $cookies = ref[2], $httpBackend = ref[3], ref;
    }));
    afterEach(function() {
      $httpBackend.verifyNoOutstandingExpectation();
      return $httpBackend.verifyNoOutstandingRequest();
    });
    return describe(".getSession", function() {
      it("is null initially", function() {
        return expect(AuthService.getSession()).toEqual(null);
      });
      return it("sets value after .login then set null after .logout", function() {
        $httpBackend.expectPOST("/api/sessions", loginPayload).respond(response);
        AuthService.login(loginArg);
        $httpBackend.flush();
        expect(AuthService.getSession()).toEqual({
          userId: 1,
          token: "sP3hoKN5-y-tRtagTf2B"
        });
        $httpBackend.expectDELETE("/api/sessions/sP3hoKN5-y-tRtagTf2B").respond({});
        AuthService.logout();
        $httpBackend.flush();
        return expect(AuthService.getSession()).toEqual(null);
      });
    });
  });

}).call(this);
