// Generated by CoffeeScript 1.9.3
(function() {
  var ItemController;

  ItemController = function(ItemService, AuthService, FlashService, $location, $routeParams) {
    var speed, vm;
    vm = this;
    vm.flash = FlashService;
    vm.items = ItemService.index();
    vm.itemOnCursor = "";
    speed = 700;
    vm.scrollPictures = function(item) {
      vm.itemOnCursor = item.id;
      setTimeout(function() {
        var diff, picOffset, picOnCursor, picOnTop, scrollOffset;
        picOnTop = $("#image-popups").children().first();
        picOnCursor = $("#image-popups .onCursor");
        picOffset = picOnCursor.position().top - picOnTop.position().top;
        scrollOffset = picOffset - $("#image-popups").height() / 2 + picOnCursor.height() / 2;
        diff = Math.abs(scrollOffset - $("#image-popups").scrollTop());
        return $("#image-popups").animate({
          scrollTop: scrollOffset
        }, {
          duration: (diff / speed) * 1000,
          easing: "linear",
          queue: false
        });
      }, 10);
    };
    vm.scrollItems = function(item) {
      vm.itemOnCursor = item.id;
      setTimeout(function() {
        var diff, itemOffset, itemOnCursor, itemOnTop, scrollOffset;
        itemOnTop = $("#items-list").children().first();
        itemOnCursor = $("#items-list .onCursor");
        itemOffset = itemOnCursor.position().top - itemOnTop.position().top;
        scrollOffset = itemOffset - $("#items-list").height() / 2 + itemOnCursor.height() / 2;
        diff = Math.abs(scrollOffset - $("#items-list").scrollTop());
        return $("#items-list").animate({
          scrollTop: scrollOffset
        }, {
          duration: (diff / speed) * 1000,
          easing: "linear",
          queue: false
        });
      }, 10);
    };
    vm.showForm = function(item) {
      vm.editing = !!item;
      vm.formOn = true;
      return vm.itemForm = _.clone(_(item || {}).extend({
        category: {
          id: $routeParams.categoryId
        }
      }));
    };
    vm.submit = function() {
      var p;
      vm.dataLoading = true;
      p = vm.editing ? ItemService.update(vm.itemForm) : ItemService.create(vm.itemForm);
      return p.$promise.then(function() {
        FlashService.set("Successfully Submitted", "success");
        vm.dataLoading = false;
        FlashService.apply();
        return vm.formOn = false;
      }, function() {
        FlashService.set("Submit failed", "danger");
        vm.dataLoading = false;
        FlashService.apply();
        return vm.formOn = false;
      });
    };
    vm.deleteItem = function(item) {
      return ItemService.destroy(item);
    };
  };

  ItemController.$inject = ["ItemService", "AuthService", "FlashService", "$location", "$routeParams"];

  angular.module("app").controller("ItemController", ItemController);

}).call(this);
