// Generated by CoffeeScript 1.9.3
(function() {
  var app;

  app = {};

  app.myStorage = new MyStorage();

  app.Category = Backbone.Model.extend({
    parse: function(response, options) {
      if (options.collection) {
        return response;
      } else {
        return response.data;
      }
    },
    initialize: function() {
      return this.on("sync", (function(_this) {
        return function() {
          return app.myStorage.update(_this.toJSON());
        };
      })(this));
    }
  });

  app.Categories = Backbone.Collection.extend({
    model: app.Category,
    url: "http://localhost:4567/categories",
    parse: function(response) {
      return response.data;
    },
    initialize: function() {
      return this.on("sync", (function(_this) {
        return function() {
          return app.myStorage.get().then(function(items) {
            if (_.some(_(_this.toJSON()).map(function(c) {
              return _(c).isEqual(_(items).pick(["name", "id"]));
            }))) {
              return app.myStorage.update({
                status: "ok"
              });
            } else {
              return app.myStorage.update({
                status: "wrong"
              });
            }
          });
        };
      })(this));
    }
  });

  app.categories = new app.Categories();

  app.CategoriesView = Backbone.View.extend({
    tagName: "div",
    id: "ext-categories",
    initialize: function() {
      this.collection = app.categories;
      this.collection.on("sync", (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
      app.myStorage.on("update", (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
      this.collection.fetch();
      return app.myStorage.fetch();
    },
    render: function() {
      this.template = _.template($("#ext-categories-t").html());
      this.$el.html(this.template({
        categories: this.collection.toJSON()
      }));
      $('.dropdown-toggle').dropdown();
      $("#new-category").popover({
        content: $("#new-category-popover-content").remove()
      });
      if (app.myStorage.items.status === "ok") {
        this.$(".dropdown-title").text(app.myStorage.items.name);
        return this.$("#upload").removeClass("disabled");
      }
    },
    events: function() {
      return {
        "click .dropdown-menu a": function(e) {
          this.collection.fetch();
          return app.myStorage.update($(e.currentTarget).data('category'));
        },
        "click #upload": function() {
          return app.appView.upload();
        },
        "keypress #new-category-name": "newCategory"
      };
    },
    newCategory: function(e) {
      var name;
      name = this.$("#new-category-name").val();
      if (e.which === 13 && name !== "") {
        return app.categories.create({
          name: name
        });
      }
    }
  });

  app.DictionaryView = Backbone.View.extend({
    tagName: "div",
    initialize: function(data) {
      this.template = _.template($("#ext-dictionary-t").html());
      this.$el.html(this.template({
        data: data
      }));
      this.$popovers = this.$('[data-toggle="popover"]');
      return this.initPopover();
    },
    events: {
      "click .remove": "remove",
      "mouseleave": function() {
        return this.$popovers.popover('hide');
      },
      "mouseover [data-toggle='popover']": function(e) {
        return $(e.currentTarget).popover('show');
      },
      "show.bs.popover [data-toggle='popover']": function(e) {
        return this.$popovers.not($(e.currentTarget)).popover('hide');
      },
      "click .suggestion": function(e) {
        app.appView.$inputWord.val($(e.currentTarget).text());
        return app.appView.searchWord();
      }
    },
    initPopover: function() {
      return this.$popovers.each(function() {
        var $popoverContent;
        $popoverContent = $(this).next().remove();
        $popoverContent.find(".meaning").click(function() {
          return app.appView.$inputMeaning.val($(this).text());
        });
        return $(this).popover({
          content: $popoverContent
        });
      });
    }
  });

  app.AppView = Backbone.View.extend({
    initialize: function() {
      this.$dictionaries = this.$("#ext-dictionaries");
      this.$inputWord = this.$("#ext-word");
      this.$inputSentence = this.$("#ext-sentence");
      this.$inputMeaning = this.$("#ext-meaning");
      this.renderCategories();
      return $('body').dblclick((function(_this) {
        return function(e) {
          var s, w;
          w = window.getSelection().toString().trim();
          s = window.getSelection().getRangeAt(0).startContainer.parentNode.textContent.trim();
          _this.$inputWord.val((_this.$inputWord.val() + " " + w).trim());
          _this.$inputSentence.val(s);
          _this.$inputWord.focus();
          return _this.searchWord();
        };
      })(this));
    },
    renderCategories: function() {
      app.categoriesView = new app.CategoriesView();
      return this.$("#ext-settings").append(app.categoriesView.$el);
    },
    events: {
      "keypress #ext-word": function(e) {
        if (e.which === 13) {
          return this.searchWord();
        }
      }
    },
    upload: function() {
      return extLib.tabCapture()["catch"](function(err) {
        return console.log("error - AppView.upload: " + err);
      }).then((function(_this) {
        return function(dataurl) {
          var data;
          data = {
            picture: dataurl,
            word: _this.$inputWord.val(),
            sentence: _this.$inputSentence.val(),
            meaning: _this.$inputMeaning.val(),
            category_id: app.myStorage.items.id
          };
          return extLib.ultraAjax({
            url: "http://localhost:4567/upload",
            type: "POST",
            data: data,
            processData: false,
            contentType: false
          })["catch"](function(err) {
            return console.log("error: AppView.upload - " + err);
          }).then(function(data) {
            return console.log(data);
          });
        };
      })(this));
    },
    searchWord: function() {
      var word;
      word = this.$inputWord.val().trim();
      if (word !== "") {
        this.$dictionaries.empty();
        extLib.Eijiro(word)["catch"](function(err) {
          return console.log("error in eijiro: " + err);
        }).then((function(_this) {
          return function(data) {
            if (_this.eijiroView != null) {
              _this.eijiroView.remove();
            }
            _this.eijiroView = new app.DictionaryView(data);
            return _this.$dictionaries.append(_this.eijiroView.$el);
          };
        })(this));
        return extLib.DictionaryAPI(word)["catch"](function(err) {
          return console.log("error in dicAPI: " + err);
        }).then((function(_this) {
          return function(data) {
            if (_this.dAPIView != null) {
              _this.dAPIView.remove();
            }
            _this.dAPIView = new app.DictionaryView(data);
            return _this.$dictionaries.append(_this.dAPIView.$el);
          };
        })(this));
      }
    }
  });

  extLib.ultraAjax({
    url: "http://localhost:4567/chrome_login",
    dataType: "json"
  })["catch"](function(err) {
    return console.log("error: AppView.upload - " + err);
  }).then(function(response) {
    if (response.status === "success") {
      return $.get(chrome.extension.getURL("contentScript/contentScript.html"), function(html) {
        var $extWrapper;
        $extWrapper = $(html);
        $('body').append($extWrapper);
        return app.appView = new app.AppView({
          el: $extWrapper
        });
      });
    } else {
      if (confirm("you need to login first from this webpage\nhttp://often-test-app.xyz\nIf you click 'OK', you will be redirected to there.")) {
        return chrome.runtime.sendMessage({
          type: "createTab",
          url: "http://often-test-app.xyz"
        });
      }
    }
  });

}).call(this);
