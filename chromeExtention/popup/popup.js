// Generated by CoffeeScript 1.9.3
(function() {
  var categoryNameInputMode, createCategory, initCategories, showLogin, wordSearch;

  showLogin = function(show_hide, email) {
    switch (show_hide) {
      case 'my_show':
        $('#login').removeClass('hide').addClass('show');
        return $('#email').removeClass('show').addClass('hide');
      case 'my_hide':
        $('#login').removeClass('show').addClass('hide');
        $('#email').removeClass('hide').addClass('show');
        return $('#email span').text(email);
    }
  };

  createCategory = function() {
    return chrome.storage.sync.get(function(items) {
      var fd, xhr;
      if ((items != null) && (items.email != null)) {
        fd = new FormData();
        fd.append("category[name]", $("#categoryName").val());
        fd.append("email", items.email);
        xhr = new XMLHttpRequest();
        xhr.open("POST", "http://often-test-app.xyz/chrome_categories_create", true);
        xhr.onload = function() {
          var $a, obj;
          obj = $.parseJSON(xhr.responseText);
          $a = $('<a>').text(obj.name).click(function() {
            $('#categoryName').val(obj.name).attr('cat_id', obj.id);
            return chrome.storage.sync.set({
              cat: obj.name,
              cat_id: obj.id
            });
          });
          $(".dropdown-menu").append($("<li>").append($a));
          $a.click();
          return categoryNameInputMode('off');
        };
        xhr.onerror = function() {
          return console.log("createCategory xhr failure: " + xhr.responseText);
        };
        return xhr.send(fd);
      }
    });
  };

  initCategories = function() {
    return chrome.storage.sync.get(function(items) {
      var fd, xhr;
      if ((items != null) && (items.email != null)) {
        fd = new FormData();
        fd.append("email", items.email);
        xhr = new XMLHttpRequest();
        xhr.open("GET", "http://often-test-app.xyz/chrome_categories_index", true);
        xhr.onload = function() {
          $.parseJSON(xhr.responseText).forEach(function(c) {
            var $a;
            $a = $('<a>').text(c.name).click(function() {
              $('#categoryName').val(c.name).attr('cat_id', c.id);
              return chrome.storage.sync.set({
                cat: c.name,
                cat_id: c.id
              });
            });
            return $(".dropdown-menu").append($("<li>").append($a));
          });
          $('.dropdown-toggle').dropdown();
          return chrome.storage.sync.get(function(items) {
            if (items != null) {
              return $('#categoryName').val(items.cat).attr('cat_id', items.cat_id);
            } else {
              return categoryNameInputMode('on');
            }
          });
        };
        xhr.onerror = function() {
          return console.log("initCategories xhr failure: " + xhr.responseText);
        };
        return xhr.send(fd);
      }
    });
  };

  categoryNameInputMode = function(on_off) {
    switch (on_off) {
      case 'on':
        $('#createCategory').removeClass('hide');
        return $('#categoryName').removeAttr('readonly');
      case 'off':
        $('#createCategory').addClass('hide');
        return $('#categoryName').attr('readonly', '');
    }
  };

  wordSearch = function() {
    return chrome.tabs.query({
      active: true,
      currentWindow: true
    }, function(tabs) {
      return chrome.tabs.sendMessage(tabs[0].id, {
        type: "popup: word_search",
        word: $("#word").val(),
        sentence: $("#sentence").val()
      }, function(responseText) {
        return $(".message").text(responseText);
      });
    });
  };

  $(function() {
    var csss, jss;
    csss = ['lib/my_bootstrap_container.css', 'contentScript/contentScript.css'];
    jss = ['lib/jquery.js', 'lib/bootstrap.js', 'contentScript/contentScript.js'];
    csss.forEach(function(css) {
      return chrome.tabs.insertCSS({
        file: css
      });
    });
    jss.forEach(function(js) {
      return chrome.tabs.executeScript({
        file: js
      });
    });
    chrome.storage.sync.get(function(items) {
      if ((items != null) && (items.email != null)) {
        return showLogin('my_hide', items.email);
      } else {
        showLogin('my_show', '');
        return $('#login').click(function() {
          return chrome.runtime.sendMessage({
            type: 'popup #login'
          }, function(response) {
            return console.log(response);
          });
        });
      }
    });
    initCategories();
    $("#createCategory").click(function() {
      return createCategory();
    });
    categoryNameInputMode('off');
    $('#dropCreateCategory').click(function() {
      return categoryNameInputMode('on');
    });
    $('#word').keypress(function(e) {
      if (e.keyCode === 13) {
        return wordSearch();
      }
    });
    $('#sentence').keypress(function(e) {
      if (e.keyCode === 13) {
        return wordSearch();
      }
    });
    return $("#search").click(function() {
      return wordSearch();
    });
  });

}).call(this);
